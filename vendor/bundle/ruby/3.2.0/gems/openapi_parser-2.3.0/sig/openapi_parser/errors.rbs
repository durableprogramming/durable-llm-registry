module OpenAPIParser
  class OpenAPIError < StandardError
    def initialize: (untyped reference) -> untyped
  end

  class ValidateError < OpenAPIError
    def initialize: (untyped data, (String | nil) type, untyped reference) -> untyped
    def message: -> String
               
    def self.build_error_result: (Object value, OpenAPIParser::Schemas::Schema schema) -> [nil, OpenAPIParser::ValidateError]
  end

  class NotExistDiscriminatorMappedSchema < OpenAPIError
    def initialize: (untyped mapped_schema_reference, untyped reference) -> untyped
    def message: -> String
  end

  class NotExistDiscriminatorPropertyName < OpenAPIError
    def initialize: (untyped mapped_schema_reference, untyped value, untyped reference) -> untyped
    def message: -> String
  end
end
